{% set version = "15.0.7" %}

package:
  name: clang-win-activation
  version: {{ version }}

build:
  number: 1

outputs:
  - name: winsdk
    build:
      skip: True  # [win]
    script: install-pkg.sh
    version: {{ WINSDK_VERSION }}
    requirements:
      build:
        - sed
      host:
      run:
        - curl *
        - msitools
        - p7zip
    about:
      license: LicenseRef-MICROSOFT_SDK
      license_file: LICENSE_SDK.txt
      license_family: Proprietary
      summary: "Scripts to download Windows SDK headers"

  - name: msvc-headers-libs
    build:
      skip: True  # [win]
    script: install-pkg.sh
    version: {{ MSVC_HEADERS_VERSION }}
    requirements:
      build:
        - python *
        - six
        - grep
        - patch
        - ripgrep
        - sed
      host:
      run:
        - unzip
        - curl *
    about:
      license: LicenseRef-MSVC_HEADERS
      license_file: LICENSE_MSVC_HEADERS.txt
      license_family: Proprietary
      summary: "Scripts to download MSVC headers and libraries"

  - name: clang_win-64
    script: install-pkg.sh   # [not win]
    script: install-pkg.bat  # [win]
    build:
      run_exports:
        strong:
          - vc >=14.1
          - vs2015_runtime >={{ MSVC_HEADERS_VERSION }}
    requirements:
      build:
        - m2-sed  # [win]
        - sed     # [unix]
      host:
        # Needed to create the symlinks
        - clangxx     {{ version }}
        - llvm-tools  {{ version }}
      run:
        - {{ pin_subpackage("msvc-headers-libs", max_pin="x.x.x") }}  # [not win]
        - {{ pin_subpackage("winsdk", max_pin="x.x.x") }}             # [not win]
        - vs2017_win-64 =={{ CL_VERSION }}                            # [win]
        - vswhere                                                     # [win]
        - clangxx             {{ version }}
        - llvm-tools          {{ version }}
        - lld                 {{ version }}
        - compiler-rt         {{ version }}
        - compiler-rt_win-64  {{ version }}
    test:
      files:
        - test.c
        - test.cpp
        - run_test_clang.sh   # [not win]
        - run_test_clang.bat  # [win]
      commands:
        - run_test_clang.bat      # [win]
        - bash run_test_clang.sh  # [not win]

about:
  home: https://github.com/conda-forge/clang-win-activation-feedstock
  license: BSD-3-Clause
  license_file: LICENSE.txt
  summary: 'clang (cross) compiler for windows with MSVC ABI compatbility'
  description: |
    To use this package in a normal conda environment, do the following

       export CONDA_BUILD_WINSDK=/opt

    To use this package in a conda-build environment, add the following

       CONDA_BUILD_WINSDK:
         - "/opt"

    in $HOME/conda_build_config.yaml and use `clang_win-64` as the compiler.

    By setting this variable, you are agreeing to the terms and conditions
    of the Windows SDK and the MSVC headers. If the Windows SDK and MSVC
    headers are not inside CONDA_BUILD_WINSDK, they would be automatically
    downloaded.

extra:
  recipe-maintainers:
    - isuruf
    - xhochy
